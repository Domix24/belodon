name: Workflow
run-name: Worflow

on:
  push:
    branches:
      - main

env:
  ELIXIR_VERSION: 1.18-otp-27
  OTP_VERSION: otp-27

jobs:
  prepare:
    name: Prepare
    runs-on: ubuntu-latest

    steps:
      - name: Checkout source
        uses: actions/checkout@v4

      - name: Setup Elixir
        id: beam
        uses: erlef/setup-beam@v1
        with:
          elixir-version: ${{ env.ELIXIR_VERSION }}
          otp-version: ${{ env.OTP_VERSION }}

      - name: Build and Deps cache
        id: cache
        uses: actions/cache@v4
        with:
          key: |
            mix-ubuntu-${{ steps.beam.outputs.otp-version }}-${{ steps.beam.outputs.elixir-version }}-${{ hashFiles('**/mix.lock')  }}
          restore-keys:
            mix-ubuntu-${{ steps.beam.outputs.otp-version }}-${{ steps.beam.outputs.elixir-version }}-
          path: |
            deps
            _build

      - name: Install depencencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: |
          mix deps.get --only test

      - name: Compile
        run: mix compile

  test:
    name: Test
    runs-on: ubuntu-latest
    needs: [prepare]

    steps:
      - name: Checkout source
        uses: actions/checkout@v4

      - name: Setup Elixir
        id: beam
        uses: erlef/setup-beam@v1
        with:
          elixir-version: ${{ env.ELIXIR_VERSION }}
          otp-version: ${{ env.OTP_VERSION }}

      - name: Restore Build and Deps cache
        id: cache
        uses: actions/cache/restore@v4
        with:
          key: |
            mix-ubuntu-${{ steps.beam.outputs.otp-version }}-${{ steps.beam.outputs.elixir-version }}-${{ hashFiles('**/mix.lock')  }}
          restore-keys:
            mix-ubuntu-${{ steps.beam.outputs.otp-version }}-${{ steps.beam.outputs.elixir-version }}-
          path: |
            deps
            _build
          fail-on-cache-miss: true

      - name: Run tests
        run: mix test --cover

  lint:
    runs-on: ubuntu-latest
    name: Lint
    needs: [prepare]

    steps:
      - name: Checkout source
        uses: actions/checkout@v4

      - name: Setup Elixir
        id: beam
        uses: erlef/setup-beam@v1
        with:
          elixir-version: ${{ env.ELIXIR_VERSION }}
          otp-version: ${{ env.OTP_VERSION }}

      - name: Restore Build and Deps cache
        id: cache
        uses: actions/cache/restore@v4
        with:
          key: |
            mix-ubuntu-${{ steps.beam.outputs.otp-version }}-${{ steps.beam.outputs.elixir-version }}-${{ hashFiles('**/mix.lock')  }}
          restore-keys:
            mix-ubuntu-${{ steps.beam.outputs.otp-version }}-${{ steps.beam.outputs.elixir-version }}-
          path: |
            deps
            _build
          fail-on-cache-miss: true

      - name: Run formatter
        run: mix format --check-formatted

      - name: Run Credo
        run: mix credo --strict

  dialyze:
    runs-on: ubuntu-latest
    name: Dialyze
    needs: [prepare]

    steps:
      - name: Checkout source
        uses: actions/checkout@v4

      - name: Setup Elixir
        id: beam
        uses: erlef/setup-beam@v1
        with:
          elixir-version: ${{ env.ELIXIR_VERSION }}
          otp-version: ${{ env.OTP_VERSION }}

      - name: Restore Build and Deps cache
        id: cache
        uses: actions/cache/restore@v4
        with:
          key: |
            mix-ubuntu-${{ steps.beam.outputs.otp-version }}-${{ steps.beam.outputs.elixir-version }}-${{ hashFiles('**/mix.lock')  }}
          restore-keys:
            mix-ubuntu-${{ steps.beam.outputs.otp-version }}-${{ steps.beam.outputs.elixir-version }}-
          path: |
            deps
            _build
          fail-on-cache-miss: true

      - name: Restore PLT cache
        id: plt
        uses: actions/cache/restore@v4
        with:
          key: |
            plt-ubuntu-${{ steps.beam.outputs.otp-version }}-${{ steps.beam.outputs.elixir-version }}-${{ hashFiles('**/mix.lock')  }}
          restore-keys:
            plt-ubuntu-${{ steps.beam.outputs.otp-version }}-${{ steps.beam.outputs.elixir-version }}-
          path: |
            priv/plts

      - name: Create PLTs
        if: steps.plt.outputs.cache-hit != 'true'
        run: mix dialyzer --plt

      - name: Save PLT cache
        id: plt_save
        uses: actions/cache/save@v4
        if: steps.plt.outputs.cache-hit != 'true'
        with:
          key: |
            plt-ubuntu-${{ steps.beam.outputs.otp-version }}-${{ steps.beam.outputs.elixir-version }}-${{ hashFiles('**/mix.lock')  }}
          path: |
            priv/plts

      - name: Run dialyzer
        run: mix dialyzer --format github --format dialyxir
